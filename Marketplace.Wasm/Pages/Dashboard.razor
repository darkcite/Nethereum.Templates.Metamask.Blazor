@page "/dashboard"
@* @using Marketplace.Wasm.Contracts *@
@using Nethereum.Web3
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Web
@using Marketplace.Wasm.Models
@using ERC721ContractLibrary.Contracts.MyERC1155;
@using ERC721ContractLibrary.Contracts.MyERC1155.ContractDefinition;
@using Nethereum.Contracts.Standards.ERC1155;
@using Nethereum.RPC.Eth.DTOs;
@using Newtonsoft.Json;
@inject Services.NFTService NFTService
@* @inject IWeb3Provider Web3Provider *@

<div>
    <div class="p-4">
        <h2 class="text-2xl py-2">Items Listed</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4">
            @if (NFTs != null && NFTs.Count > 0)
            {
                @foreach (var nft in NFTs)
                {
                    <div class="border shadow rounded-xl overflow-hidden">
                        <h3>@nft.Name</h3>
                        <img src="@ConvertIpfsToHttp(nft.Image)" class="rounded" alt="@nft.Name" />
                        <div class="p-4 bg-black">
                            <p class="text-2xl font-bold text-white">Price - @nft.Price Eth</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <h1 class="py-10 px-20 text-3xl">No NFTs listed</h1>
            }
        </div>
    </div>
</div>

@code {
    private List<NFT> NFTs { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        NFTs = await NFTService.LoadNFTs();
    }


    private string ConvertIpfsToHttp(string ipfsUrl)
    {
        return ipfsUrl.Replace("ipfs://", "https://we3ge.infura-ipfs.io/ipfs/");
    }

}
