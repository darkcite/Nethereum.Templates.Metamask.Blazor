@page "/"
@* @using Marketplace.Wasm.Contracts *@
@using Nethereum.Web3
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Components.Web
@using Marketplace.Wasm.Models
@inject Services.NFTService NFTService
@* @inject IWeb3Provider Web3Provider *@

<div class="flex justify-center">
    <div class="px-4" style="max-width: 1600px;">
        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 pt-4">
            @if (NFTs != null && NFTs.Count > 0)
            {
                @foreach (var nft in NFTs)
                {
                    <div class="border shadow rounded-xl overflow-hidden">
                        <img src="@ConvertIpfsToHttp(nft.Image)" />
                        <div class="p-4">
                            <p style="height: 64px;" class="text-2xl font-semibold">@nft.Name</p>
                            <div style="height: 70px; overflow: hidden;">
                                <p class="text-gray-400">@nft.Description</p>
                            </div>
                        </div>
                        <div class="p-4 bg-black">
                            <p class="text-2xl font-bold text-white">@nft.Price ETH</p>
                            <button class="mt-4 w-full bg-pink-500 text-white font-bold py-2 px-12 rounded" @onclick="() => BuyNFT(nft)">Buy</button>
                        </div>
                    </div>
                }
            }
            else
            {
                <h1 class="px-20 py-10 text-3xl">No items in marketplace</h1>
            }
        </div>
    </div>
</div>

@code {
    private List<NFT> NFTs { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        NFTs = await NFTService.LoadNFTsForSale();
    }

    private async Task BuyNFT(NFT nft)
    {
        // Add your logic to buy NFT
    }

    private string ConvertIpfsToHttp(string ipfsUrl)
    {
        return ipfsUrl.Replace("ipfs://", "https://we3ge.infura-ipfs.io/ipfs/");
    }
}
